<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Real-Time Products</title>
</head>

<body>
  <h1>Real-Time Products</h1>

  <ul id="productList">
    {{#each products}}
      <li>
        <strong>{{this.title}}</strong>
        <p>{{this.description}}</p>
        <p>Price: ${{this.price}}</p>
      </li>
    {{/each}}
  </ul>

  <form id="productForm">
    <input type="text" name="title" placeholder="Product Title" required>
    <input type="text" name="description" placeholder="Product Description" required>
    <input type="number" name="price" placeholder="Product Price" required>
    <button type="submit">Add Product</button>
  </form>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
  <script src="/scripts/socket.js"></script>

 <script>
    const form = document.getElementById('productForm');
    const socket = io();
    const productList = document.getElementById('productList');

    // Definir la función para actualizar la lista de productos
    function updateProductList(products) {
      // Limpiar la lista actual
      productList.innerHTML = '';

      // Verificar si products es un array antes de iterar
      if (Array.isArray(products)) {
        // Rellenar la lista con los productos actualizados
        products.forEach(product => {
          const li = document.createElement('li');
          li.innerHTML = `<strong>${product.title}</strong>
                           <p>${product.description}</p>
                           <p>Price: $${product.price}</p>`;
          productList.appendChild(li);
        });
      } else {
        console.error('El formato de los productos no es un array:', products);
      }
    }

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const title = document.getElementsByName('title')[0].value;
      const description = document.getElementsByName('description')[0].value;
      const price = document.getElementsByName('price')[0].value;
  
      socket.emit('addProduct', { title, description, price });

      // Evitar el envío del formulario y la recarga de la página
      return false;
    });

    // Manejar la lista inicial de productos
    socket.on('initialProducts', (initialProducts) => {
      updateProductList(initialProducts);
    });

    // Manejar la actualización de productos
    socket.on('productUpdated', (updatedProducts) => {
      updateProductList(updatedProducts.products);
    });

    // Manejar errores
    socket.on('addError', (errorMessage) => {
      console.error('Error:', errorMessage);
      // Puedes mostrar el error en la interfaz de usuario si lo deseas
    });
  </script>
</body>

</html>